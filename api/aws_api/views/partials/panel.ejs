<div class="col-md-5 m-auto">

	<div class="card card-body">	
		<h2>Panel</h2><a href="" onclick="clearPanel(); return false;">Clear</a>

		<form action="/portal" method="POST" enctype="multipart/form-data" id="panel">
			<div class="model-data-container" style="display: none;"></div>
			<!-- title -->
			<div class="form-group" id="title">
				<label for="title">Title</label>
				<input name="title" class="form-control" type="text">
			</div>

			<!-- description -->
			<div class="form-group" id="description">
				<label for="description">Description</label>
				<textarea name="description" class="form-control" type="text"></textarea>
			</div>

			<!-- option: deployedUrl || gameFile && styleFile(S3) -->
			<div class="form-group" id="type">
				<label for="type">Type</label>
				<select name="type" class="form-control">
					<option disabled selected value> -- select an option -- </option>
					<option value="is_deployed">Website</option>
					<option value="is_game_file" data-toggle="modal" data-target="#exampleModalCenter">Native</option>
					<option value="is_service" data-toggle="modal" data-target="#exampleModalCenter">Service</option>
				</select>
			</div>

			<div class="form-group" id="urlField" style="display: none">
				<label for="type">Type</label>
				<i class="far fa-window-close float-right" onclick="returnSelectDefault()"></i>
				<input name="deployed_url" type="text" class="form-control" placeholder="Deployed URL">
			</div>

			<div class="form-group" id="displayUploads" style="display: none">
				<label for="type">Type</label>
				<i class="far fa-window-close float-right" onclick="returnSelectDefault()"></i>
				<input name="" type="text" class="form-control" disabled>
			</div>

			<!-- git url -->
			<div class="form-group" id="gitUrl">
				<label for="git_url">Git URL</label>
				<input name="git_url" class="form-control" type="text">
			</div>

			<!-- iconFile(S3) -->
			<div class="form-group" id="icon">
				<label for="icon_file">Icon</label>
				<i class="fas fa-globe float-right" onclick="fillIconUrlField(null)"></i>
				<input name="icon_file" class="form-control" type="file" accept=".jpg, .jpeg, .png">
			</div>

			<div class="form-group" id="displayIcon" style="display: none">
				<label for="type">Type</label>
				<i class="far fa-window-close float-right" onclick="returnIconFieldDefault()"></i>
				<input name="icon_url" type="text" class="form-control">
			</div>

			<button class="btn btn-primary btn-block" type="submit">Submit</button>
		</form>
	</div>

	<script>
		const panel = $('#panel');
		const modalDataContainer = $('.model-data-container');
		const type = $('#type');
		const urlField = $('#urlField');
		const displayUploads = $('#displayUploads');


		panel.submit(e => {
			const title = $('#title').children()[1].value;
			const description = $('#description').children()[1].value;
			const deployedUrl = urlField.children()[2].value;
			const uploads = displayUploads.children()[2].value;
			const gitUrl = $('#gitUrl').children()[1].value;
			const iconUrl = $('#displayIcon').children()[2].value;
			const iconFile = $('#icon').children()[2].value;


			if (!title) {
				alert('no title');
				return false;
			}

			if (!description) {
				alert('no description');
				return false;
			}

			if (!uploads && !deployedUrl) {
				alert('no native logic or deployed url');
				return false;
			}

			if (!gitUrl) {
				alert('no git url');
				return false;
			}

			if (!iconUrl && !iconFile) {
				alert('no icon');
				return false;
			}
		});

		function returnSelectDefault() {
			urlField.css('display', 'none');
			displayUploads.children()[2].value = '';
			displayUploads.css('display', 'none');

			type.children()[1].value = '';
			type.css('display', 'block');

			modalDataContainer.empty();
		}

		function returnIconFieldDefault() {
			$('#icon').children()[2].setAttribute('value', '');
			$('#displayIcon').css('display', 'none');
			$('#displayIcon').children()[2].setAttribute('value', '');

			$('#icon').css('display', 'block');			
		}

		function fillIconUrlField(url) {
			$('#icon').children()[2].setAttribute('value', '');
			$('#icon').css('display', 'none');

			$('#displayIcon').css('display', 'block');
			$('#displayIcon').children()[2].setAttribute('value', (url) ? url : '');
		}

		function changeTypeOption(selectType, fileUrlsFromGallery) {
			const istypeFromGallery = (urlField.children()[2].value) ? 'deployed' : 'game';

			switch (selectType) {
				case 'is_deployed':
					if (panel.attr('action').split('/')[2] === 'update' && istypeFromGallery !== 'deployed') {
						alert('Cannot alter type of already created app, please choose the NATIVE APP option');

						type.children()[1].value = '';

						return;
					}

					type.css('display', 'none');
					urlField.css('display', 'block');

					break;

				case 'is_game_file':
					if (panel.attr('action').split('/')[2] === 'update' && istypeFromGallery !== 'game') {
						alert('Cannot alter type of already created app, please choose the WEB APP option');

						type.children()[1].value = '';

						return;
					};

					if (!fileUrlsFromGallery) {
						$('#exampleModalCenter').modal("show");
						
						return;
					}

				    type.css('display', 'none');

				    const oldLogicUrl = document.createElement('input');
				    oldLogicUrl.setAttribute('type', 'hidden');
				    oldLogicUrl.setAttribute('class', 'oldLogicUrl');
				    oldLogicUrl.setAttribute('name', 'game_url');
				    oldLogicUrl.value = fileUrlsFromGallery.game_file;

					modalDataContainer.prepend(oldLogicUrl);
				    
				    if (fileUrlsFromGallery.style_file) {
					    const oldStyleUrl = document.createElement('input');
					    oldStyleUrl.setAttribute('type', 'hidden');
					    oldStyleUrl.setAttribute('class', 'oldStyleUrl');
					    oldStyleUrl.setAttribute('name', 'style_url');
					    oldStyleUrl.value = fileUrlsFromGallery.style_file;
					
						modalDataContainer.prepend(oldStyleUrl);
				    }

					displayUploads.children()[2].value = `Has Logic; ${(!fileUrlsFromGallery.style_file) ? '' : 'Has Style;'}`;
					displayUploads.css('display', 'block');

					break;

				case 'is_service':
					if (panel.attr('action').split('/')[2] === 'update' && istypeFromGallery !== 'game') {
						alert('Cannot alter type of already created app, please choose the WEB APP option');

						type.children()[1].value = '';

						return;
					};

					if (!fileUrlsFromGallery) {
						$('#serviceModal').modal("show");
						
						return;
					}

				 //    type.css('display', 'none');

				 //    const oldLogicUrl = document.createElement('input');
				 //    oldLogicUrl.setAttribute('type', 'hidden');
				 //    oldLogicUrl.setAttribute('class', 'oldLogicUrl');
				 //    oldLogicUrl.setAttribute('name', 'game_url');
				 //    oldLogicUrl.value = fileUrlsFromGallery.game_file;

					// modalDataContainer.prepend(oldLogicUrl);
				    
				 //    if (fileUrlsFromGallery.style_file) {
					//     const oldStyleUrl = document.createElement('input');
					//     oldStyleUrl.setAttribute('type', 'hidden');
					//     oldStyleUrl.setAttribute('class', 'oldStyleUrl');
					//     oldStyleUrl.setAttribute('name', 'style_url');
					//     oldStyleUrl.value = fileUrlsFromGallery.style_file;
					
					// 	modalDataContainer.prepend(oldStyleUrl);
				 //    }

					// displayUploads.children()[2].value = `Has Logic; ${(!fileUrlsFromGallery.style_file) ? '' : 'Has Style;'}`;
					// displayUploads.css('display', 'block');

					break;

				default:
					break;
			}
		}

		type.change(e => changeTypeOption(e.target.value, null));

		function clearPanel() {
			panel.attr('action', '/portal');

			returnSelectDefault();
			returnIconFieldDefault();

			panel.trigger('reset');
		}
	</script>
</div>
