<!-- Modal -->
<div class="modal fade" id="serviceModal" tabindex="-1" role="dialog" aria-labelledby="serviceModalTitle" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLongTitle">Upload Service Details</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="returnSelectDefault(resetSlideshowModal)">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body set-list">

        <div class="set" id=0>
          
          <div class="form-group img_input">
            <label for="slide_file">Image</label>

            <input name="slide_file" class="form-control" type="file" accept=".png, .jpg, .jpeg">
          </div>

          <div class="form-group desc">
            <label for="slide_desc">Description</label>
            <textarea name="slide_desc" class="form-control" cols="30" rows="10"></textarea>
          </div>

          <div class="form-group" style="display: flex; justify-content: space-between;">
            <button class="prev" onclick="plusSlides(-1)"><</button>
            <button class="del" onclick="deleteServiceSet(event)">Delete</button>
            <button class="next" onclick="plusSlides(1)">></button>
          </div>

          <button class="btn btn-primary btn-block" onclick="addNewServiceSet()">Add</button>
          <button class="btn btn-primary btn-block" onclick="moveUploadedServiceFilesToForm()">Upload</button>
        </div>

      </div>
    </div>
  </div>

  <script>
    const listOfSets = $('.set-list');

    const set = $('.set');
    let slideIndex = 1;
    const clone = () => {
      const clearedElem = set.clone(true);
      clearedElem.attr('id', slideIndex);

      $(clearedElem.children()[0]).find('input').val('');
      $(clearedElem.children()[1]).find('textarea').val('');

      return clearedElem;
    };

    function addNewServiceSet() {
      listOfSets.append(clone());
      slideIndex = listOfSets.children().length;
      showSlides(slideIndex);
    }

    function deleteServiceSet(event) {
      event.path[2].remove();
      showSlides(slideIndex);
    }

    function plusSlides(n) {
      showSlides(slideIndex += n);
    }

    function currentSlide(n) {
      showSlides(slideIndex = n);
    }

    function showSlides(n) {
      if (n > listOfSets.children().length) {slideIndex = 1}    
      if (n < 1) {slideIndex = listOfSets.children().length}

      for (let i = 0; i < listOfSets.children().length; i++) {
          $(listOfSets.children()[i]).css("display", "none");  
      }

      $(listOfSets.children()[slideIndex-1]).css("display", "block");
    }

    function moveUploadedServiceFilesToForm() {
      const imgList = $(".img_input");
      const descList = $('.desc');

      for(let i = 0; i < listOfSets.children().length; i++) {
        const imgClone = $(imgList[i]).clone();
        const descClone = $(descList[i]).clone();

        modalDataContainer.prepend(imgClone);
        modalDataContainer.prepend(descClone);

        $(listOfSets.children()[i]).css("display", "block");  
      };

      type.css('display', 'none');

      displayUploads.children()[2].value = `Has ${listOfSets.children().length} slides`;
      resetSlideshowModal();

      displayUploads.css('display', 'block');

      $('#serviceModal').modal("hide");
    }

    function resetSlideshowModal() {
      slideIndex = 1;
      listOfSets.html(clone())
    }
  </script>
</div>