<!-- Modal -->
<div class="modal fade" id="serviceDisplayModal" tabindex="-1" role="dialog" aria-labelledby="serviceModalTitle" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="serviceModalTitle">Failed to upload resouce</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">

        <div id="carouselExampleIndicators" class="carousel slide">
          <form class="carousel-inner" id="slideShowContent" method="POST" enctype="multipart/form-data"></form>

          <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="sr-only">Previous</span>
          </a>
          <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="sr-only">Next</span>
          </a>
        </div>

      </div>
    </div>
  </div>

  <script>
    function editSlide(slide, title, slideContainer) {
      const cEl = (el) => document.createElement(el);
      // clear slideContainer
      slideContainer.empty();
      slideContainer.attr('action', `/portal/slide/update/${slide.id}`);

      // fill with same elements for creating a slide with reset features like back or exit
      const editInputsContainer = listOfSets.clone(true);
      const containerSet = $(editInputsContainer).children()[0];
      $(containerSet).children().slice(-3).remove();

      const hiddenTitleInput = cEl('input');
      hiddenTitleInput.setAttribute('type', 'hidden');
      hiddenTitleInput.setAttribute('name', 'project_title');
      hiddenTitleInput.value = title;
      containerSet.append(hiddenTitleInput);

      const hiddenNameInput = cEl('input');
      hiddenNameInput.setAttribute('type', 'hidden');
      hiddenNameInput.setAttribute('name', 'slide_name');
      hiddenNameInput.value = slide.name;
      containerSet.append(hiddenNameInput);

      const updateButton = cEl('button');
      updateButton.setAttribute('class', 'btn btn-primary btn-block');
      updateButton.innerText = 'Update';

      containerSet.append(updateButton);

      // fill those elements with data from 'slide' and append to slideContainer
      $(editInputsContainer).find('textarea[name="slide_desc"]').val(slide.description);
      slideContainer.append(editInputsContainer);
    }

    function deleteSlide(slide, title, slideContainer, pos) {
      const isConfirmed = confirm(`Are you sure you want to DELETE ${slide.image_url}?`);

      // // // post request to delete
      if (isConfirmed) {
        $.ajax({
          type: "POST",
          url: `/portal/slide/delete/${slide.id}`,
          data: { title, "name": slide.name },
          success: response => {
            $($(slideContainer).children()[pos+1]).attr('class', 'carousel-item active');
            $(slideContainer).children()[pos].remove();
          }
        });
      }
    }
  </script>
</div>